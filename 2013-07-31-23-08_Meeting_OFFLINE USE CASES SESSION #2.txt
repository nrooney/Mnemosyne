Meeting Name: OFFLINE USE CASES SESSION #2
Time: 2013-07-31-23-08


ATTENDEES ADDED: 2013-07-31-23-08:
Natasha GSMA, Bin_Hu AT&T

schuki: Bin_Hu: I do have a quick update for you
schuki: i managed to discuss offline use cases with Alex Russell at a recent google event I went to here in London
schuki: I had no idea that he actually lives here! US accent threw me..
schuki: He says he will be very interested in our use cases and would like to discuss them when we get them to a decent state
Bin_Hu: Cool. Maybe he moved to London from US
schuki: this should be good because he's a real influencer in web apps
Bin_Hu: Let's say, once he reviewed our use cases, what's his plan at next step?
schuki: well, they are heavily pushing the Navigation Controller atm
schuki: https://github.com/slightlyoff/NavigationController/blob/master/explainer.md
schuki: It allows the developer to create smaller caches with different configurations and priorities (I believe)
schuki: it's a lot more flexible
schuki: it is attempting to solve the issues with the old app cache
schuki: I *think* he is hoping that our use cases support this new proposal
schuki: it's a bit "arse-about-face" as we say in the UK, but it's something!
Bin_Hu: So basically he will see if our use case will support the direction of Navigation Controller
schuki: yeah i reckon so...
schuki: I, on the other hand, wish to see if there's any use cases that Navigation Controller DOESN'T support, and then try to get him to push these through web apps or HTML WGs
Bin_Hu: Good idea.
schuki: so that's some sort of progress...
Bin_Hu: Then what is our ultimate goal there?
schuki: Mainly that if we are feeling like no-one is listenting to our use cases then we can use a power like him to get people to recognise them
schuki: I will try and see how far i get with that and if it's a dead end then leave it where it is
schuki: I also watched the "Offline" session from edge this year (I was there but too long ago to remember all details)
schuki: http://www.youtube.com/watch?v=Oic22dQMRXQ
Bin_Hu: :)
schuki: At this event google, mozilla, twitter and FT Labs discussed issues with app cache and other offline capabilities. I made a list of any relevant possible "use cases" for us to discuss
Bin_Hu: Are those captured in your draft of document?
Bin_Hu: We are trying hard internally to sell those different dots to our marketing and business folks
schuki: i have made notes for them currently, but i will be uploading a new version with these new cases in the next iteration
schuki: if i don't manage to upload it tomorrow i should be able to have it done by friday
Bin_Hu: Great.
schuki: :D
schuki: one of the most interesting parts of the talk was their discussion about app cache
Bin_Hu: That's fine.
schuki: hi bryan_sullivan!
bryan_sullivan: Bryan here

ATTENDEES ADDED: 2013-07-31-23-21:
bryan_sullivan AT&T

Bin_Hu: Hi Bryan
schuki: bryan_sullivan: we are just talking about the "offline" session at edge conference this year
schuki: google, mozilla, twitter and FT labs were discussing offline use cases
bryan_sullivan: ok, i'll catch up. interested in the difference between "offline" and "installable" use cases
schuki: Google explained that their main goal for "app cache" was to create a cache mechanism for the "shell" of a web app, NOT the content
bryan_sullivan: that's not fully an offline use case if so, only app caching
schuki: but when they put it into practice people wnated to use it for both, but it was not meant for that
schuki: bryan_sullivan: good point
bryan_sullivan: app cache can't be used for data except static data
bryan_sullivan: image maps etc
schuki: i found it interesting that they then felt a need to divide up "Shell" and "Content", and then perhaps this is something we may need to think about at some point
bryan_sullivan: Did they have any examples of full apps using appcache, code and data?
Bin_Hu: Their motivation could be that "app cache" is more static than "content cache"
schuki: yes i think so...
schuki: do we agree with this?
schuki: or do we feel like this is outside of our offline use cases as bryan_sullivan said?
Bin_Hu: The update of "app cache" could be quite infrequent
Bin_Hu: maybe once a week, or once a month
bryan_sullivan: Certainly appcache is static, and update problematic
schuki: yes true..
schuki: I believe the NavigationController spec will allow for these different caches to occur
bryan_sullivan: As an example, I have an app that works fully through appcache, except for HTML5 audio: http://bkaj.net/demos/Through_the_Looking_Glass/
schuki: the developer will be in control and design these caches as s/he sees fit
bryan_sullivan: an offline ebook reader, with audio pulled in when online (using navigator.online to know)
schuki: bryan_sullivan: nice book choice (my fav in fact!)
schuki: bryan_sullivan: so this is SHELL and CONTENT both using app cache
schuki: bryan_sullivan: did you find it horrific to code?
bryan_sullivan: No, it was OK - but updates are tricky
schuki: yes i think this was a greater issue for us...
schuki: strangely the "updates" issue doesn't seem to be mentioned as much as i think it should be
bryan_sullivan: I have other examples that pull in content using XHR or hidden iframes, depending upon online/offline mode. That's more ugly.
schuki: so perhaps lets start with adding some use cases around updates for this session
schuki: I am updating the W3C_Offline_Use_Cases document which can be found here https://infocentre2.gsma.com/gp/og/W3C/WorkingDocuments/Forms/General%20Documents.aspx
schuki: currently for updating we have the following use cases:
bryan_sullivan: specifically focused on appcache, or all local storage techs?
schuki: "A DEVELOPER should be able to trigger the WEB-APP to “download” new HTML, CSS, JavaScript, images etc. when these are uploaded to the server"
schuki: and
schuki: "When a USER moves from offline onto online, there must be a way for the WEB-APP to notify the server to tell the server what assets the USER consumed, and which assets it now needs."
schuki: and that is it
bryan_sullivan: part (a) is not possible without push or polling
schuki: do we need more use cases around updating?
schuki: bryan_sullivan: good point

ACTION POINT: Natasha to add "not possible without polling" to  "Use Case Update Web App Assets"

bryan_sullivan: for part (b), this is possible now using XHR but I'm not sure of the cache state info. for other storage techs its possible to know what is cached
bryan_sullivan: by "cache state info" i mean the normal browser cache
bryan_sullivan: "
schuki: yes..
bryan_sullivan: "other tech" is e.g. localstorage, IDB, ...
schuki: ha! i was just going to write that
schuki: yes i think it will be easier with indexeddb and localstorage
schuki: Bin_Hu: this is a silly question, but what about updating "installed" apps?
schuki: this is going to require a new, fresh install
schuki: how will the user know about this and can this ever happen without them triggering the action?
bryan_sullivan: not necessarily - a widget update does not have to lose all cached data for example
bryan_sullivan: this was an explicit WAC requirement
schuki: ha! things i should know...
bryan_sullivan: the same goes for appcache - my feed reader does not lose all previous data when updated
bryan_sullivan: so we need to define "new, fresh"
schuki: hmmm perhaps a bad choice of words on my part..
Bin_Hu: maybe "with fresh content" or "without fresh content"
schuki: so yes let's take content as a first example, a packaged app should be able to request fresh content, yes?
Bin_Hu: certainly "refresh content" shouldn't be required, unless it is the intention
bryan_sullivan: "clean install" implies that the UA removes all data for the app, and it starts new. This typically requires a user action. There is no "delete me" AFAIK.

ACTION POINT: Natasha add use case "Installed apps should be able to request new content"

bryan_sullivan: I have built "clean me" into my apps to ensure a clean update if needed, but there is no general support for that in the UA AFAIK.
schuki: Bin_Hu: what if the shell (html/css) of the app needs updating?
Bin_Hu: a new manifest will imply a new shell needs update
bryan_sullivan: Depends upon how it was "installed". In simple cases the app can keep version info on all assets and self-manage that. For appcache, it's trickier, bringing in the need for a trigger.
bryan_sullivan: e.g. each JS file has a "version
bryan_sullivan: and the main app manages updates per that
schuki: Bin_Hu: so for an installed app the manifest file will still need to come from the server?
bryan_sullivan: yes. but you see, this quickly morphs from "offline" to "installable"
bryan_sullivan: so it's important to define what the scope of the use cases are
bryan_sullivan: e.g. using an app on a plane vs really "installing" it
schuki: in the document I have created a seperate section for "installed" apps
schuki: so i can add those specific use cases there
schuki: "installed" would be those packaged apps that a user downloads and runs almost natively (i guess)
bryan_sullivan: yes. "installed" apps are meant for long-term use; offline use can be temporary even within a session with all data then synced to a server
bryan_sullivan: when back online
schuki: yes exactly!
schuki: gosh it almost could be a sliding scale...
bryan_sullivan: google docs is a great example
Bin_Hu: Not sure if we want to cover "installed apps" in "offline" use cases
bryan_sullivan: agree, they should be distinct
schuki: he he! good thing Mr Appelquist is on holiday!
bryan_sullivan: they are both important but require different focuses
schuki: I have added them in a seperate section, to save us all beating each other with sticks!
bryan_sullivan: so we are focusing on offline, right?
schuki: bryan_sullivan: yes, but the "installed" issue comes up often
Bin_Hu: I believe so
bryan_sullivan: so e.g. facebook on the subway, with text, audio, video preloaded per the latest updates
schuki: for now i will add a use case which says an installed app should be able to know it needs updates to it's shell, and we can chuck it if we want to later
Bin_Hu: Sometimes I even think, "installed" could be a special solution to support "offline"
schuki: bryan_sullivan: yes precisely

ACTION POINT: Natasha add use case "Installed apps should be able to detect when shell needs updating"

bryan_sullivan: if you want to talk sliding scales, add one for the weight of the media
bryan_sullivan: start at small, and range to huge (movies)
schuki: i also am a little more interested in how an "offline app" (as we are defining it here) updates
bryan_sullivan: there are different implications for size, also for number e.g. 10 sound clips vs a media library
schuki: bryan_sullivan: yes last time Bin_Hu shared with us some use cases from webTV WG which is looking at this stuff
bryan_sullivan: great
bryan_sullivan: re how an app updates, are you interested more in the code or data?
schuki: bryan_sullivan: both
schuki: i think data is the easy answer
schuki: the hard part is code
bryan_sullivan: "offline" apps can self-update their code as I noted - the same applies for data
bryan_sullivan: Javascript code can be replaced ad-hoc. I don't know of any ill effects to that.
bryan_sullivan: take the data first then; what is an example use case for data update?
schuki: bryan_sullivan: even if the js files are listed in a cache manifest file?
schuki: bryan_sullivan: well, for a data update it could be simple as "update with new news articles for the day"
bryan_sullivan: I would leave out appcache for now - it complicates things... but yes
bryan_sullivan: I can replace the JS objects referenced in the cache manifest
bryan_sullivan: updating news articles is easy - just XHR
schuki: ah yes you said this earlier
bryan_sullivan: it's an app-specific thing, e.g. a complex example is http://bkaj.net/feed/
bryan_sullivan: this implements much of the OMA DCD spec that Bin and I worked on
bryan_sullivan: it uses client and server storage and a specific XHR API for updates
bryan_sullivan: "DCD" = "Dynamic Content Delivery"
schuki: ah fantastic
bryan_sullivan: It gets tricker though (maybe) when you're dealing with large content, e.g. a video
schuki: yes, i suppose our "download and go" use case may cover this but i would like to check and perhaps make a new one
bryan_sullivan: I haven't done much there, so I don't know the real limits of using IDB. Web & TV will explore that though as you noted.

ACTION POINT: Natasha add use case "DCD for larger files such as videos" ask Bryan or Bin for clarification

schuki: yes and we have a few members who sit in the web and tv group which can help us
schuki: Bin_Hu: you are one of them right?
Bin_Hu: Yes
schuki: good good!
schuki: ok a few trivial ones to close off the meeitng
schuki: these are a few things which came to my mind
bryan_sullivan: One of the use cases you can explore for offline, is  deferred request handling, which will prevent the app from having to watch online/offline indicators
schuki: do you think a user should be able to allow the browser to let a particular web app acess more space on the device?
bryan_sullivan: yes
bryan_sullivan: quota management API is work in W3C
schuki: ha! great!

ACTION POINT: Natasha add "a user should be able to allow the browser to let a particular web app acess more space on the device"

bryan_sullivan: http://www.w3.org/TR/quota-api/
schuki: and finally i wanted to bring up fallbacks (e.g. fallback to a cache when offline), but maybe we should bring this up next time
schuki: bryan_sullivan: thanks for this!
bryan_sullivan: A note: I will address some offline use cases in http://www.w3.org/2013/socialweb/ next week
schuki: ah really? can you provide us an update next time?
bryan_sullivan: I have an input paper co-written with Telecom Italia, http://www.w3.org/2013/socialweb/papers/Opportunities%20and%20challenges%20for%20standard%20Mobile%20Social%20Networks.pdf
bryan_sullivan: I can provide an update, Bin will also be there I think.

ACTION POINT: bryan_sullivan to provide an update on W3C workshop on social standards and his discussion on offline use cases

schuki: Oh I am very jealous you can go to SF so easily!
Bin_Hu: Yes, I will be there too

ACTION POINT: Natasha - read all bryan's links!

schuki: Ok excellent.
schuki: Let's finish up then
Bin_Hu: not that bad from London - only about 10 hours
schuki: I have a list of items to go through next time, including fallbacks, CDNs (David P will join us after his holiday to discuss this), prioritisation, priveledge and sandboxing
schuki: and more synchronisation / updating
schuki: for now our action points are:
schuki: I will close up here and check the bot's minutes and send round to everyone
schuki: does anyone have any questions?
Bin_Hu: I am good
bryan_sullivan: re next week, and fallback techniques
schuki: thanks so much guys! we'll have a frustrating month with people going on holiday but we'll push through!
bryan_sullivan: i can describe the (cheap, dirty) methods used in http://bkaj.net/reader/
schuki: cheap and dirty is ok here!
bryan_sullivan: ok

ACTION POINT: add fallback techniques to agenda for next time


ATTENDEES:
Natasha GSMA
Bin_Hu AT&T
bryan_sullivan AT&T

ACTION POINTS:
ACTION POINT: Natasha to add "not possible without polling" to  "Use Case Update Web App Assets"
ACTION POINT: Natasha add use case "Installed apps should be able to request new content"
ACTION POINT: Natasha add use case "Installed apps should be able to detect when shell needs updating"
ACTION POINT: Natasha add use case "DCD for larger files such as videos" ask Bryan or Bin for clarification
ACTION POINT: Natasha add "a user should be able to allow the browser to let a particular web app acess more space on the device"
ACTION POINT: bryan_sullivan to provide an update on W3C workshop on social standards and his discussion on offline use cases
ACTION POINT: Natasha - read all bryan's links!
ACTION POINT: add fallback techniques to agenda for next time

Meeting has closed.

